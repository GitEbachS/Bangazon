// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bangazon.Migrations
{
    [DbContext(typeof(BangazonDbContext))]
    [Migration("20240221233920_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bangazon.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Asian"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Indian"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mexican"
                        },
                        new
                        {
                            Id = 4,
                            Name = "BBQ"
                        });
                });

            modelBuilder.Entity("Bangazon.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("boolean");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Shipping")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            DateCreated = new DateTime(2024, 2, 21, 17, 39, 20, 556, DateTimeKind.Local).AddTicks(2422),
                            IsClosed = false,
                            PaymentType = "Visa",
                            Shipping = "UPS"
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            DateCreated = new DateTime(2024, 2, 21, 17, 39, 20, 556, DateTimeKind.Local).AddTicks(2475),
                            IsClosed = false,
                            PaymentType = "Cash",
                            Shipping = "FedEx"
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            DateCreated = new DateTime(2024, 2, 21, 17, 39, 20, 556, DateTimeKind.Local).AddTicks(2478),
                            IsClosed = false,
                            PaymentType = "Check",
                            Shipping = "Prime"
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 4,
                            DateCreated = new DateTime(2024, 2, 21, 17, 39, 20, 556, DateTimeKind.Local).AddTicks(2480),
                            IsClosed = false,
                            PaymentType = "Visa",
                            Shipping = "FedEx"
                        });
                });

            modelBuilder.Entity("Bangazon.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("SellerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Bright, fragrant, and sweet",
                            Name = "Vietnamese Cinnamon",
                            Price = 14.00m,
                            Quantity = 1400,
                            SellerId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Nutty and colorful",
                            Name = "Garam Masala",
                            Price = 11.00m,
                            Quantity = 1560,
                            SellerId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Colorgul, fragrant, and sweet",
                            Name = "Curry Powder",
                            Price = 12.00m,
                            Quantity = 1660,
                            SellerId = 3
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            Description = "Smoky, dark tomato flaver, and slightly sweet",
                            Name = "Smoked Paprika",
                            Price = 10.00m,
                            Quantity = 1500,
                            SellerId = 4
                        });
                });

            modelBuilder.Entity("Bangazon.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsSeller")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Barry@barry.com",
                            IsSeller = false,
                            Name = "Barry Clark",
                            Uid = "lkjfdg95vmfD9geKVPpzydRjhUc2"
                        },
                        new
                        {
                            Id = 2,
                            Email = "Mary@mary.com",
                            IsSeller = false,
                            Name = "Mary Apple",
                            Uid = "kXzfdg95vmfD9geKVPpzydRrthgf"
                        },
                        new
                        {
                            Id = 3,
                            Email = "Steve@steve.com",
                            IsSeller = false,
                            Name = "Steve Lair",
                            Uid = "jkhfdg95vmfDytuKVPpzydRjh333"
                        },
                        new
                        {
                            Id = 4,
                            Email = "Jake@jake.com",
                            IsSeller = false,
                            Name = "Jake Stellar",
                            Uid = "fghfdg95vmfD9geKVPpzydRdfgrt"
                        });
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<int>("OrdersId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductsId")
                        .HasColumnType("integer");

                    b.HasKey("OrdersId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("Bangazon.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bangazon.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
